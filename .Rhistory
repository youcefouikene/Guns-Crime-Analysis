# Installation des packages nécessaires.
install.packages("readxl")
# ****************** Nom et Prénom(s) Étudiant 1: OUIKENE Youcef. ****************************
# ****************** Nom et Prénom(s) Étudiant 2: AOULMI Lina. *************************
# ******************************** Option: SIQ ***********************************************
# ******************************** Groupe: 2CSSQ2 **********************************************
# Installation des packages nécessaires.
install.packages("readxl")
install.packages("dplyr")
install.packages("corrplot")
install.packages("FactoMineR")
install.packages("factoextra")
install.packages("ggplot2")
install.packages("readr")
# Importation des packages.
library(readxl)
library(dplyr)
library(corrplot)
library(FactoMineR)
library(ggplot2)
library(factoextra)
library(readr)
# Lire un fichier CSV depuis le chemin Kaggle
df <- read.csv('Guns.csv')
df <- read.csv('Guns.csv')
head(df)
# Lire un fichier CSV depuis le chemin Kaggle
df <- read.csv('Guns.csv')
head(df)
# Spécification des donnée sur lesquels l'analyse sera effectuée
df_quantitative <- df[, c('violent', 'murder', 'robbery', 'prisoners', 'afam', 'cauc', 'population', 'income', 'density')]
# Calcul de la matrice de corrélation
corr_matrix <- cor(df_quantitative)
corr_matrix
corrplot(corr_matrix, type='upper')
# Application de ACP
pca_result <- PCA(df_quantitative, graph = FALSE)
# Valeurs propres
pca_result$eig # Valeurs propres
fviz_eig(pca_result, addlabels=TRUE) # Visualisation des valeurs propres
# ------------------ Etude des variables ---------------------
# Qualité de representation des variables
cos2_plot <- fviz_cos2(pca_result, choice="var", axes=1:2) # Graphique en barres de la qualité de representation des variables sur le plan
cos2_plot
corrplot(get_pca_var(pca_result)$cos2, is.corr=FALSE) # Graphique en corrélation pour montrer les cos² des variables.
fviz_pca_var(pca_result, col.var ="cos2", gradient.cols=c("#00AFBB","#E7B800","#FC4E07"), repel = TRUE) # Cercle de corrélation
# Contribution des variables à la construction des axes
pca_result$var$coord # Pour avoir la projection des variables
pca_result$var$contrib # Pour avoir les contributions absolues des variables aux différents axes.
# Visualiser la contribution absolue des variables au premier axe.
fviz_contrib(pca_result, choice="var", axes=1)
# Visualiser la contribution absolue des variables au deuxième axe.
fviz_contrib(pca_result, choice="var", axes=2)
# ------------------ Etude des individus ---------------------
# Qualite de representation des individus
fviz_pca_ind(pca_result, col.ind ="cos2", gradient.cols=c("#00AFBB","#E7B800","#FC4E07"), repel = TRUE)
# Extraire les cos² pour les deux premiers axes
cos2_values <- rowSums(pca_result$ind$cos2[, 1:2])
# Créer un vecteur de catégories basées sur les intervalles
categories <- cut(cos2_values, breaks = c(0, 0.25, 0.5, 0.75, 1),
labels = c("[0, 0.25]", "[0.25, 0.5]", "[0.5, 0.75]", "[0.75, 1]"),
right = TRUE)
# Compter le nombre d'individus dans chaque catégorie
count_categories <- table(categories)
# Créer un graphique en barres
barplot(count_categories,
main = "Distribution des individus en fonction de leur cos²",
xlab = "Intervalles de cos²",
ylab = "Nombre d'individus",
col = c("#00AFBB", "#E7B800", "#FC4E07", "#D55E00"),
border = "white")
# Contribution des individus
seuil <- 1/1173
# Premier axe
contrib_axis_1 <- pca_result$ind$contrib[, 1]
fviz_contrib(pca_result, choice="ind", axes=1, top = 40) #On limite le nombre d'individus à 40 pour avoir une visualisation lisible.
cpt1 <- sum(contrib_axis_1 > seuil)
# Deuxième axe
contrib_axis_2 <- pca_result$ind$contrib[, 2]
fviz_contrib(pca_result, choice="ind", axes=2, top = 40) #On limite le nombre d'individus à 40 pour avoir une visualisation lisible.
cpt2 <- sum(contrib_axis_2 > seuil)
# Representation des individus sur le plan factoriel
fviz_pca_ind(pca_result,
# geom = c("point", "text"),
geom="point",
col.ind = "blue",  # Couleur uniforme
repel = TRUE,
title = "Représentation des individus (axes 1 et 2)")
# Distribution de la loi "shall carry"
fviz_pca_ind(pca_result,
geom.ind = "point",
col.ind = df$law,
palette = c("#FC4E07", "#00AFBB"),
addEllipses = TRUE,
ellipse.type = "confidence",
legend.title = "Shall Carry Law",
title = "Projection des états selon la loi sur le port d'armes")
View(corr_matrix)
# Installation des packages nécessaires.
install.packages("readxl")
# Installation des packages nécessaires.
install.packages("readxl")
# Lire un fichier CSV depuis le chemin Kaggle
df <- read.csv('Guns.csv')
head(df)
# Spécification des donnée sur lesquels l'analyse sera effectuée
df_quantitative <- df[, c('violent', 'murder', 'robbery', 'prisoners', 'afam', 'cauc', 'population', 'income', 'density')]
# Calcul de la matrice de corrélation
corr_matrix <- cor(df_quantitative)
corr_matrix
corrplot(corr_matrix, type='upper')
library(readxl)
library(dplyr)
library(corrplot)
library(FactoMineR)
library(ggplot2)
library(factoextra)
library(readr)
# Lire un fichier CSV depuis le chemin Kaggle
df <- read.csv('Guns.csv')
head(df)
# Spécification des donnée sur lesquels l'analyse sera effectuée
df_quantitative <- df[, c('violent', 'murder', 'robbery', 'prisoners', 'afam', 'cauc', 'population', 'income', 'density')]
# Calcul de la matrice de corrélation
corr_matrix <- cor(df_quantitative)
corr_matrix
corrplot(corr_matrix, type='upper')
# Application de ACP
pca_result <- PCA(df_quantitative, graph = FALSE)
# Valeurs propres
pca_result$eig # Valeurs propres
fviz_eig(pca_result, addlabels=TRUE) # Visualisation des valeurs propres
# ------------------ Etude des variables ---------------------
# Qualité de representation des variables
cos2_plot <- fviz_cos2(pca_result, choice="var", axes=1:2) # Graphique en barres de la qualité de representation des variables sur le plan
cos2_plot
corrplot(get_pca_var(pca_result)$cos2, is.corr=FALSE) # Graphique en corrélation pour montrer les cos² des variables.
fviz_pca_var(pca_result, col.var ="cos2", gradient.cols=c("#00AFBB","#E7B800","#FC4E07"), repel = TRUE) # Cercle de corrélation
# Contribution des variables à la construction des axes
pca_result$var$coord # Pour avoir la projection des variables
pca_result$var$contrib # Pour avoir les contributions absolues des variables aux différents axes.
# Visualiser la contribution absolue des variables au premier axe.
fviz_contrib(pca_result, choice="var", axes=1)
# Visualiser la contribution absolue des variables au deuxième axe.
fviz_contrib(pca_result, choice="var", axes=2)
# ------------------ Etude des individus ---------------------
# Qualite de representation des individus
fviz_pca_ind(pca_result, col.ind ="cos2", gradient.cols=c("#00AFBB","#E7B800","#FC4E07"), repel = TRUE)
# Extraire les cos² pour les deux premiers axes
cos2_values <- rowSums(pca_result$ind$cos2[, 1:2])
# Créer un vecteur de catégories basées sur les intervalles
categories <- cut(cos2_values, breaks = c(0, 0.25, 0.5, 0.75, 1),
labels = c("[0, 0.25]", "[0.25, 0.5]", "[0.5, 0.75]", "[0.75, 1]"),
right = TRUE)
# Compter le nombre d'individus dans chaque catégorie
count_categories <- table(categories)
# Créer un graphique en barres
barplot(count_categories,
main = "Distribution des individus en fonction de leur cos²",
xlab = "Intervalles de cos²",
ylab = "Nombre d'individus",
col = c("#00AFBB", "#E7B800", "#FC4E07", "#D55E00"),
border = "white")
# Contribution des individus
seuil <- 1/1173
# Premier axe
contrib_axis_1 <- pca_result$ind$contrib[, 1]
fviz_contrib(pca_result, choice="ind", axes=1, top = 40) #On limite le nombre d'individus à 40 pour avoir une visualisation lisible.
cpt1 <- sum(contrib_axis_1 > seuil)
# Deuxième axe
contrib_axis_2 <- pca_result$ind$contrib[, 2]
fviz_contrib(pca_result, choice="ind", axes=2, top = 40) #On limite le nombre d'individus à 40 pour avoir une visualisation lisible.
cpt2 <- sum(contrib_axis_2 > seuil)
# Representation des individus sur le plan factoriel
fviz_pca_ind(pca_result,
# geom = c("point", "text"),
geom="point",
col.ind = "blue",  # Couleur uniforme
repel = TRUE,
title = "Représentation des individus (axes 1 et 2)")
# Distribution de la loi "shall carry"
fviz_pca_ind(pca_result,
geom.ind = "point",
col.ind = df$law,
palette = c("#FC4E07", "#00AFBB"),
addEllipses = TRUE,
ellipse.type = "confidence",
legend.title = "Shall Carry Law",
title = "Projection des états selon la loi sur le port d'armes")
